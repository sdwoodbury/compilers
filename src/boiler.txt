;Author: Stuart Woodbury
;yr45570@umbc.edu
;Anything made with my compiler belongs to me
;created february 2015


extern printf
extern fmod
extern pow
extern scanf

	SECTION .data
fmt_decimal_nl: db "%ld", 10, 0      ;for printf longs
fmt_decimal: db "%ld", 0            ;no newline
scan_decimal: db "%ld", 0           ;;for scanf

fmt_float_nl: db "%lf", 10, 0       ;for printf floats
fmt_float: db "%lf", 0              ;no new line
scan_float: db "%lf", 0             ;;for scanf

fmt_string_nl: db "%s", 10, 0         ;printf for strings
fmt_string: db "%s", 0          ;no new line 

SECTION .text

long_pow:
.LFB0:
	push	rbp
	mov	rbp, rsp
	mov	QWORD [rbp-24], rdi
	mov	QWORD [rbp-32], rsi
	mov	QWORD [rbp-8], 1
	jmp	.L2
.L3:
	mov	rax, QWORD [rbp-8]
	imul	rax, QWORD [rbp-24]
	mov	QWORD [rbp-8], rax
	sub	QWORD [rbp-32], 1
.L2:
	cmp	QWORD [rbp-32], 0
	jg	.L3
	mov	rax, QWORD [rbp-8]
	pop	rbp
	ret

add:
	push   rbp
	mov    rbp,rsp
	movsd [rbp-8],xmm0
	movsd [rbp-16],xmm1
	movsd  xmm0,  [rbp-8]
	addsd  xmm0,  [rbp-16]
	movsd [rbp-32],xmm0
	mov    rax,QWORD [rbp-32]
	mov    QWORD [rbp-32],rax
	movsd  xmm0,  [rbp-32]
	pop    rbp
	ret    

subtract:
    push   rbp
    mov    rbp,rsp
 	movsd [rbp-8],xmm0
  	movsd [rbp-16],xmm1
   	movsd  xmm0,  [rbp-8]
   	subsd  xmm0, [rbp-16]
	movsd [rbp-32],xmm0
 	mov    rax,QWORD [rbp-32]
  	mov    QWORD [rbp-32],rax
  	movsd  xmm0,  [rbp-32]
   	pop    rbp
   	ret    

multiply:
    push   rbp
    mov    rbp,rsp
 	movsd [rbp-8],xmm0
  	movsd [rbp-16],xmm1
   	movsd  xmm0,  [rbp-8]
   	mulsd  xmm0, [rbp-16]
	movsd [rbp-32],xmm0
 	mov    rax,QWORD [rbp-32]
  	mov    QWORD [rbp-32],rax
  	movsd  xmm0,  [rbp-32]
   	pop    rbp
   	ret    

divide:
    push   rbp
    mov    rbp,rsp
 	movsd [rbp-8],xmm0
  	movsd [rbp-16],xmm1
   	movsd  xmm0,  [rbp-8]
   	divsd  xmm0, [rbp-16]
	movsd [rbp-32],xmm0
 	mov    rax,QWORD [rbp-32]
  	mov    QWORD [rbp-32],rax
  	movsd  xmm0,  [rbp-32]
   	pop    rbp
   	ret  

toFloat:
	push   rbp
 	mov    rbp,rsp
	mov    QWORD [rbp-8],rdi
	cvtsi2sd xmm0,  [rbp-8]
  	movsd [rbp-16],xmm0
   	mov    rax,QWORD [rbp-16]
  	mov    QWORD [rbp-16],rax
  	movsd  xmm0,  [rbp-16]
    pop    rbp
	ret    

  
	global main
main:
	push rbp
	mov rbp, rsp
	sub rsp, 16 ;
