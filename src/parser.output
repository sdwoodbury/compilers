Terminals unused in grammar

   UMINUS
   '"'


State 7 conflicts: 1 shift/reduce
State 22 conflicts: 1 shift/reduce
State 30 conflicts: 1 shift/reduce


Grammar

    0 $accept: prog $end

    1 prog: %empty
    2     | nil prog
    3     | stmt prog

    4 nil: LINE

    5 stmt_list_prime: stmt stmt_list_prime
    6                | LINE stmt_list_prime
    7                | '}'

    8 stmt_list: '{' stmt stmt_list_prime

    9 expr_list: '(' expr ')'

   10 $@1: %empty

   11 expr_list: '(' expr ',' $@1 expr_list_prime

   12 $@2: %empty

   13 expr_list_prime: expr ',' $@2 expr_list_prime
   14                | expr ')'

   15 $@3: %empty

   16 id_list: '(' TYPE ID $@3 id_list_prime

   17 $@4: %empty

   18 id_list_prime: ',' TYPE ID $@4 id_list_prime
   19              | ')'

   20 $@5: %empty

   21 fnctn_decl: TYPE ID $@5 id_list stmt_list

   22 $@6: %empty

   23 fnctn_decl: TYPE ID '(' ')' $@6 stmt_list

   24 $@7: %empty

   25 fnctn: ID $@7 expr_list
   26      | ID '(' ')'

   27 stmt: declaration ';'
   28     | assignment ';'
   29     | print ';'
   30     | input ';'
   31     | conditional
   32     | fnctn_decl
   33     | fnctn ';'
   34     | RET ';'
   35     | RET expr ';'
   36     | BREAK ';'
   37     | CONTINUE ';'

   38 $@8: %empty

   39 conditional: IF '(' expr ')' $@8 stmt_list

   40 $@9: %empty

   41 $@10: %empty

   42 conditional: WHILE $@9 '(' expr ')' $@10 stmt_list

   43 declaration: TYPE ID
   44            | TYPE ID '=' expr

   45 assignment: ID '=' expr

   46 print: PRINT expr
   47      | PRINTLN expr

   48 input: INPUT ID

   49 expr: fnctn
   50     | ID
   51     | TRUE
   52     | FALSE
   53     | LONG
   54     | FLOAT
   55     | STRING
   56     | expr EQU expr
   57     | expr NE expr
   58     | expr AND expr
   59     | expr OR expr
   60     | expr '<' expr
   61     | expr LE expr
   62     | expr '>' expr
   63     | expr GE expr
   64     | '!' expr
   65     | expr '+' expr
   66     | expr '-' expr
   67     | expr '*' expr
   68     | expr '/' expr
   69     | expr '%' expr
   70     | '~' expr
   71     | expr POW expr
   72     | '(' expr ')'


Terminals, with rules where they appear

$end (0) 0
'!' (33) 64
'"' (34)
'%' (37) 69
'(' (40) 9 11 16 23 26 39 42 72
')' (41) 9 14 19 23 26 39 42 72
'*' (42) 67
'+' (43) 65
',' (44) 11 13 18
'-' (45) 66
'/' (47) 68
';' (59) 27 28 29 30 33 34 35 36 37
'<' (60) 60
'=' (61) 44 45
'>' (62) 62
'{' (123) 8
'}' (125) 7
'~' (126) 70
error (256)
TYPE (258) 16 18 21 23 43 44
IF (259) 39
WHILE (260) 42
LINE (261) 4 6
BREAK (262) 36
CONTINUE (263) 37
ID (264) 16 18 21 23 25 26 43 44 45 48 50
STRING (265) 55
FLOAT (266) 54
LONG (267) 53
PRINT (268) 46
PRINTLN (269) 47
INPUT (270) 48
RET (271) 34 35
TRUE (272) 51
FALSE (273) 52
EQU (274) 56
NE (275) 57
AND (276) 58
OR (277) 59
LE (278) 61
GE (279) 63
UMINUS (280)
POW (281) 71


Nonterminals, with rules where they appear

$accept (44)
    on left: 0
prog (45)
    on left: 1 2 3, on right: 0 2 3
nil (46)
    on left: 4, on right: 2
stmt_list_prime (47)
    on left: 5 6 7, on right: 5 6 8
stmt_list (48)
    on left: 8, on right: 21 23 39 42
expr_list (49)
    on left: 9 11, on right: 25
$@1 (50)
    on left: 10, on right: 11
expr_list_prime (51)
    on left: 13 14, on right: 11 13
$@2 (52)
    on left: 12, on right: 13
id_list (53)
    on left: 16, on right: 21
$@3 (54)
    on left: 15, on right: 16
id_list_prime (55)
    on left: 18 19, on right: 16 18
$@4 (56)
    on left: 17, on right: 18
fnctn_decl (57)
    on left: 21 23, on right: 32
$@5 (58)
    on left: 20, on right: 21
$@6 (59)
    on left: 22, on right: 23
fnctn (60)
    on left: 25 26, on right: 33 49
$@7 (61)
    on left: 24, on right: 25
stmt (62)
    on left: 27 28 29 30 31 32 33 34 35 36 37, on right: 3 5 8
conditional (63)
    on left: 39 42, on right: 31
$@8 (64)
    on left: 38, on right: 39
$@9 (65)
    on left: 40, on right: 42
$@10 (66)
    on left: 41, on right: 42
declaration (67)
    on left: 43 44, on right: 27
assignment (68)
    on left: 45, on right: 28
print (69)
    on left: 46 47, on right: 29
input (70)
    on left: 48, on right: 30
expr (71)
    on left: 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66
    67 68 69 70 71 72, on right: 9 11 13 14 35 39 42 44 45 46 47 56
    57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72


State 0

    0 $accept: . prog $end

    TYPE      shift, and go to state 1
    IF        shift, and go to state 2
    WHILE     shift, and go to state 3
    LINE      shift, and go to state 4
    BREAK     shift, and go to state 5
    CONTINUE  shift, and go to state 6
    ID        shift, and go to state 7
    PRINT     shift, and go to state 8
    PRINTLN   shift, and go to state 9
    INPUT     shift, and go to state 10
    RET       shift, and go to state 11

    $default  reduce using rule 1 (prog)

    prog         go to state 12
    nil          go to state 13
    fnctn_decl   go to state 14
    fnctn        go to state 15
    stmt         go to state 16
    conditional  go to state 17
    declaration  go to state 18
    assignment   go to state 19
    print        go to state 20
    input        go to state 21


State 1

   21 fnctn_decl: TYPE . ID $@5 id_list stmt_list
   23           | TYPE . ID '(' ')' $@6 stmt_list
   43 declaration: TYPE . ID
   44            | TYPE . ID '=' expr

    ID  shift, and go to state 22


State 2

   39 conditional: IF . '(' expr ')' $@8 stmt_list

    '('  shift, and go to state 23


State 3

   42 conditional: WHILE . $@9 '(' expr ')' $@10 stmt_list

    $default  reduce using rule 40 ($@9)

    $@9  go to state 24


State 4

    4 nil: LINE .

    $default  reduce using rule 4 (nil)


State 5

   36 stmt: BREAK . ';'

    ';'  shift, and go to state 25


State 6

   37 stmt: CONTINUE . ';'

    ';'  shift, and go to state 26


State 7

   25 fnctn: ID . $@7 expr_list
   26      | ID . '(' ')'
   45 assignment: ID . '=' expr

    '='  shift, and go to state 27
    '('  shift, and go to state 28

    '('  [reduce using rule 24 ($@7)]

    $@7  go to state 29


State 8

   46 print: PRINT . expr

    ID      shift, and go to state 30
    STRING  shift, and go to state 31
    FLOAT   shift, and go to state 32
    LONG    shift, and go to state 33
    TRUE    shift, and go to state 34
    FALSE   shift, and go to state 35
    '!'     shift, and go to state 36
    '~'     shift, and go to state 37
    '('     shift, and go to state 38

    fnctn  go to state 39
    expr   go to state 40


State 9

   47 print: PRINTLN . expr

    ID      shift, and go to state 30
    STRING  shift, and go to state 31
    FLOAT   shift, and go to state 32
    LONG    shift, and go to state 33
    TRUE    shift, and go to state 34
    FALSE   shift, and go to state 35
    '!'     shift, and go to state 36
    '~'     shift, and go to state 37
    '('     shift, and go to state 38

    fnctn  go to state 39
    expr   go to state 41


State 10

   48 input: INPUT . ID

    ID  shift, and go to state 42


State 11

   34 stmt: RET . ';'
   35     | RET . expr ';'

    ID      shift, and go to state 30
    STRING  shift, and go to state 31
    FLOAT   shift, and go to state 32
    LONG    shift, and go to state 33
    TRUE    shift, and go to state 34
    FALSE   shift, and go to state 35
    '!'     shift, and go to state 36
    '~'     shift, and go to state 37
    '('     shift, and go to state 38
    ';'     shift, and go to state 43

    fnctn  go to state 39
    expr   go to state 44


State 12

    0 $accept: prog . $end

    $end  shift, and go to state 45


State 13

    2 prog: nil . prog

    TYPE      shift, and go to state 1
    IF        shift, and go to state 2
    WHILE     shift, and go to state 3
    LINE      shift, and go to state 4
    BREAK     shift, and go to state 5
    CONTINUE  shift, and go to state 6
    ID        shift, and go to state 7
    PRINT     shift, and go to state 8
    PRINTLN   shift, and go to state 9
    INPUT     shift, and go to state 10
    RET       shift, and go to state 11

    $default  reduce using rule 1 (prog)

    prog         go to state 46
    nil          go to state 13
    fnctn_decl   go to state 14
    fnctn        go to state 15
    stmt         go to state 16
    conditional  go to state 17
    declaration  go to state 18
    assignment   go to state 19
    print        go to state 20
    input        go to state 21


State 14

   32 stmt: fnctn_decl .

    $default  reduce using rule 32 (stmt)


State 15

   33 stmt: fnctn . ';'

    ';'  shift, and go to state 47


State 16

    3 prog: stmt . prog

    TYPE      shift, and go to state 1
    IF        shift, and go to state 2
    WHILE     shift, and go to state 3
    LINE      shift, and go to state 4
    BREAK     shift, and go to state 5
    CONTINUE  shift, and go to state 6
    ID        shift, and go to state 7
    PRINT     shift, and go to state 8
    PRINTLN   shift, and go to state 9
    INPUT     shift, and go to state 10
    RET       shift, and go to state 11

    $default  reduce using rule 1 (prog)

    prog         go to state 48
    nil          go to state 13
    fnctn_decl   go to state 14
    fnctn        go to state 15
    stmt         go to state 16
    conditional  go to state 17
    declaration  go to state 18
    assignment   go to state 19
    print        go to state 20
    input        go to state 21


State 17

   31 stmt: conditional .

    $default  reduce using rule 31 (stmt)


State 18

   27 stmt: declaration . ';'

    ';'  shift, and go to state 49


State 19

   28 stmt: assignment . ';'

    ';'  shift, and go to state 50


State 20

   29 stmt: print . ';'

    ';'  shift, and go to state 51


State 21

   30 stmt: input . ';'

    ';'  shift, and go to state 52


State 22

   21 fnctn_decl: TYPE ID . $@5 id_list stmt_list
   23           | TYPE ID . '(' ')' $@6 stmt_list
   43 declaration: TYPE ID .
   44            | TYPE ID . '=' expr

    '='  shift, and go to state 53
    '('  shift, and go to state 54

    '('       [reduce using rule 20 ($@5)]
    $default  reduce using rule 43 (declaration)

    $@5  go to state 55


State 23

   39 conditional: IF '(' . expr ')' $@8 stmt_list

    ID      shift, and go to state 30
    STRING  shift, and go to state 31
    FLOAT   shift, and go to state 32
    LONG    shift, and go to state 33
    TRUE    shift, and go to state 34
    FALSE   shift, and go to state 35
    '!'     shift, and go to state 36
    '~'     shift, and go to state 37
    '('     shift, and go to state 38

    fnctn  go to state 39
    expr   go to state 56


State 24

   42 conditional: WHILE $@9 . '(' expr ')' $@10 stmt_list

    '('  shift, and go to state 57


State 25

   36 stmt: BREAK ';' .

    $default  reduce using rule 36 (stmt)


State 26

   37 stmt: CONTINUE ';' .

    $default  reduce using rule 37 (stmt)


State 27

   45 assignment: ID '=' . expr

    ID      shift, and go to state 30
    STRING  shift, and go to state 31
    FLOAT   shift, and go to state 32
    LONG    shift, and go to state 33
    TRUE    shift, and go to state 34
    FALSE   shift, and go to state 35
    '!'     shift, and go to state 36
    '~'     shift, and go to state 37
    '('     shift, and go to state 38

    fnctn  go to state 39
    expr   go to state 58


State 28

   26 fnctn: ID '(' . ')'

    ')'  shift, and go to state 59


State 29

   25 fnctn: ID $@7 . expr_list

    '('  shift, and go to state 60

    expr_list  go to state 61


State 30

   25 fnctn: ID . $@7 expr_list
   26      | ID . '(' ')'
   50 expr: ID .

    '('  shift, and go to state 28

    '('       [reduce using rule 24 ($@7)]
    $default  reduce using rule 50 (expr)

    $@7  go to state 29


State 31

   55 expr: STRING .

    $default  reduce using rule 55 (expr)


State 32

   54 expr: FLOAT .

    $default  reduce using rule 54 (expr)


State 33

   53 expr: LONG .

    $default  reduce using rule 53 (expr)


State 34

   51 expr: TRUE .

    $default  reduce using rule 51 (expr)


State 35

   52 expr: FALSE .

    $default  reduce using rule 52 (expr)


State 36

   64 expr: '!' . expr

    ID      shift, and go to state 30
    STRING  shift, and go to state 31
    FLOAT   shift, and go to state 32
    LONG    shift, and go to state 33
    TRUE    shift, and go to state 34
    FALSE   shift, and go to state 35
    '!'     shift, and go to state 36
    '~'     shift, and go to state 37
    '('     shift, and go to state 38

    fnctn  go to state 39
    expr   go to state 62


State 37

   70 expr: '~' . expr

    ID      shift, and go to state 30
    STRING  shift, and go to state 31
    FLOAT   shift, and go to state 32
    LONG    shift, and go to state 33
    TRUE    shift, and go to state 34
    FALSE   shift, and go to state 35
    '!'     shift, and go to state 36
    '~'     shift, and go to state 37
    '('     shift, and go to state 38

    fnctn  go to state 39
    expr   go to state 63


State 38

   72 expr: '(' . expr ')'

    ID      shift, and go to state 30
    STRING  shift, and go to state 31
    FLOAT   shift, and go to state 32
    LONG    shift, and go to state 33
    TRUE    shift, and go to state 34
    FALSE   shift, and go to state 35
    '!'     shift, and go to state 36
    '~'     shift, and go to state 37
    '('     shift, and go to state 38

    fnctn  go to state 39
    expr   go to state 64


State 39

   49 expr: fnctn .

    $default  reduce using rule 49 (expr)


State 40

   46 print: PRINT expr .
   56 expr: expr . EQU expr
   57     | expr . NE expr
   58     | expr . AND expr
   59     | expr . OR expr
   60     | expr . '<' expr
   61     | expr . LE expr
   62     | expr . '>' expr
   63     | expr . GE expr
   65     | expr . '+' expr
   66     | expr . '-' expr
   67     | expr . '*' expr
   68     | expr . '/' expr
   69     | expr . '%' expr
   71     | expr . POW expr

    '<'  shift, and go to state 65
    '>'  shift, and go to state 66
    EQU  shift, and go to state 67
    NE   shift, and go to state 68
    AND  shift, and go to state 69
    OR   shift, and go to state 70
    LE   shift, and go to state 71
    GE   shift, and go to state 72
    '+'  shift, and go to state 73
    '-'  shift, and go to state 74
    '*'  shift, and go to state 75
    '/'  shift, and go to state 76
    '%'  shift, and go to state 77
    POW  shift, and go to state 78

    $default  reduce using rule 46 (print)


State 41

   47 print: PRINTLN expr .
   56 expr: expr . EQU expr
   57     | expr . NE expr
   58     | expr . AND expr
   59     | expr . OR expr
   60     | expr . '<' expr
   61     | expr . LE expr
   62     | expr . '>' expr
   63     | expr . GE expr
   65     | expr . '+' expr
   66     | expr . '-' expr
   67     | expr . '*' expr
   68     | expr . '/' expr
   69     | expr . '%' expr
   71     | expr . POW expr

    '<'  shift, and go to state 65
    '>'  shift, and go to state 66
    EQU  shift, and go to state 67
    NE   shift, and go to state 68
    AND  shift, and go to state 69
    OR   shift, and go to state 70
    LE   shift, and go to state 71
    GE   shift, and go to state 72
    '+'  shift, and go to state 73
    '-'  shift, and go to state 74
    '*'  shift, and go to state 75
    '/'  shift, and go to state 76
    '%'  shift, and go to state 77
    POW  shift, and go to state 78

    $default  reduce using rule 47 (print)


State 42

   48 input: INPUT ID .

    $default  reduce using rule 48 (input)


State 43

   34 stmt: RET ';' .

    $default  reduce using rule 34 (stmt)


State 44

   35 stmt: RET expr . ';'
   56 expr: expr . EQU expr
   57     | expr . NE expr
   58     | expr . AND expr
   59     | expr . OR expr
   60     | expr . '<' expr
   61     | expr . LE expr
   62     | expr . '>' expr
   63     | expr . GE expr
   65     | expr . '+' expr
   66     | expr . '-' expr
   67     | expr . '*' expr
   68     | expr . '/' expr
   69     | expr . '%' expr
   71     | expr . POW expr

    '<'  shift, and go to state 65
    '>'  shift, and go to state 66
    EQU  shift, and go to state 67
    NE   shift, and go to state 68
    AND  shift, and go to state 69
    OR   shift, and go to state 70
    LE   shift, and go to state 71
    GE   shift, and go to state 72
    '+'  shift, and go to state 73
    '-'  shift, and go to state 74
    '*'  shift, and go to state 75
    '/'  shift, and go to state 76
    '%'  shift, and go to state 77
    POW  shift, and go to state 78
    ';'  shift, and go to state 79


State 45

    0 $accept: prog $end .

    $default  accept


State 46

    2 prog: nil prog .

    $default  reduce using rule 2 (prog)


State 47

   33 stmt: fnctn ';' .

    $default  reduce using rule 33 (stmt)


State 48

    3 prog: stmt prog .

    $default  reduce using rule 3 (prog)


State 49

   27 stmt: declaration ';' .

    $default  reduce using rule 27 (stmt)


State 50

   28 stmt: assignment ';' .

    $default  reduce using rule 28 (stmt)


State 51

   29 stmt: print ';' .

    $default  reduce using rule 29 (stmt)


State 52

   30 stmt: input ';' .

    $default  reduce using rule 30 (stmt)


State 53

   44 declaration: TYPE ID '=' . expr

    ID      shift, and go to state 30
    STRING  shift, and go to state 31
    FLOAT   shift, and go to state 32
    LONG    shift, and go to state 33
    TRUE    shift, and go to state 34
    FALSE   shift, and go to state 35
    '!'     shift, and go to state 36
    '~'     shift, and go to state 37
    '('     shift, and go to state 38

    fnctn  go to state 39
    expr   go to state 80


State 54

   23 fnctn_decl: TYPE ID '(' . ')' $@6 stmt_list

    ')'  shift, and go to state 81


State 55

   21 fnctn_decl: TYPE ID $@5 . id_list stmt_list

    '('  shift, and go to state 82

    id_list  go to state 83


State 56

   39 conditional: IF '(' expr . ')' $@8 stmt_list
   56 expr: expr . EQU expr
   57     | expr . NE expr
   58     | expr . AND expr
   59     | expr . OR expr
   60     | expr . '<' expr
   61     | expr . LE expr
   62     | expr . '>' expr
   63     | expr . GE expr
   65     | expr . '+' expr
   66     | expr . '-' expr
   67     | expr . '*' expr
   68     | expr . '/' expr
   69     | expr . '%' expr
   71     | expr . POW expr

    '<'  shift, and go to state 65
    '>'  shift, and go to state 66
    EQU  shift, and go to state 67
    NE   shift, and go to state 68
    AND  shift, and go to state 69
    OR   shift, and go to state 70
    LE   shift, and go to state 71
    GE   shift, and go to state 72
    '+'  shift, and go to state 73
    '-'  shift, and go to state 74
    '*'  shift, and go to state 75
    '/'  shift, and go to state 76
    '%'  shift, and go to state 77
    POW  shift, and go to state 78
    ')'  shift, and go to state 84


State 57

   42 conditional: WHILE $@9 '(' . expr ')' $@10 stmt_list

    ID      shift, and go to state 30
    STRING  shift, and go to state 31
    FLOAT   shift, and go to state 32
    LONG    shift, and go to state 33
    TRUE    shift, and go to state 34
    FALSE   shift, and go to state 35
    '!'     shift, and go to state 36
    '~'     shift, and go to state 37
    '('     shift, and go to state 38

    fnctn  go to state 39
    expr   go to state 85


State 58

   45 assignment: ID '=' expr .
   56 expr: expr . EQU expr
   57     | expr . NE expr
   58     | expr . AND expr
   59     | expr . OR expr
   60     | expr . '<' expr
   61     | expr . LE expr
   62     | expr . '>' expr
   63     | expr . GE expr
   65     | expr . '+' expr
   66     | expr . '-' expr
   67     | expr . '*' expr
   68     | expr . '/' expr
   69     | expr . '%' expr
   71     | expr . POW expr

    '<'  shift, and go to state 65
    '>'  shift, and go to state 66
    EQU  shift, and go to state 67
    NE   shift, and go to state 68
    AND  shift, and go to state 69
    OR   shift, and go to state 70
    LE   shift, and go to state 71
    GE   shift, and go to state 72
    '+'  shift, and go to state 73
    '-'  shift, and go to state 74
    '*'  shift, and go to state 75
    '/'  shift, and go to state 76
    '%'  shift, and go to state 77
    POW  shift, and go to state 78

    $default  reduce using rule 45 (assignment)


State 59

   26 fnctn: ID '(' ')' .

    $default  reduce using rule 26 (fnctn)


State 60

    9 expr_list: '(' . expr ')'
   11          | '(' . expr ',' $@1 expr_list_prime

    ID      shift, and go to state 30
    STRING  shift, and go to state 31
    FLOAT   shift, and go to state 32
    LONG    shift, and go to state 33
    TRUE    shift, and go to state 34
    FALSE   shift, and go to state 35
    '!'     shift, and go to state 36
    '~'     shift, and go to state 37
    '('     shift, and go to state 38

    fnctn  go to state 39
    expr   go to state 86


State 61

   25 fnctn: ID $@7 expr_list .

    $default  reduce using rule 25 (fnctn)


State 62

   56 expr: expr . EQU expr
   57     | expr . NE expr
   58     | expr . AND expr
   59     | expr . OR expr
   60     | expr . '<' expr
   61     | expr . LE expr
   62     | expr . '>' expr
   63     | expr . GE expr
   64     | '!' expr .
   65     | expr . '+' expr
   66     | expr . '-' expr
   67     | expr . '*' expr
   68     | expr . '/' expr
   69     | expr . '%' expr
   71     | expr . POW expr

    '+'  shift, and go to state 73
    '-'  shift, and go to state 74
    '*'  shift, and go to state 75
    '/'  shift, and go to state 76
    '%'  shift, and go to state 77
    POW  shift, and go to state 78

    $default  reduce using rule 64 (expr)

    Conflict between rule 64 and token '<' resolved as reduce ('<' < '!').
    Conflict between rule 64 and token '>' resolved as reduce ('>' < '!').
    Conflict between rule 64 and token EQU resolved as reduce (EQU < '!').
    Conflict between rule 64 and token NE resolved as reduce (NE < '!').
    Conflict between rule 64 and token AND resolved as reduce (AND < '!').
    Conflict between rule 64 and token OR resolved as reduce (OR < '!').
    Conflict between rule 64 and token LE resolved as reduce (LE < '!').
    Conflict between rule 64 and token GE resolved as reduce (GE < '!').
    Conflict between rule 64 and token '+' resolved as shift ('!' < '+').
    Conflict between rule 64 and token '-' resolved as shift ('!' < '-').
    Conflict between rule 64 and token '*' resolved as shift ('!' < '*').
    Conflict between rule 64 and token '/' resolved as shift ('!' < '/').
    Conflict between rule 64 and token '%' resolved as shift ('!' < '%').
    Conflict between rule 64 and token POW resolved as shift ('!' < POW).


State 63

   56 expr: expr . EQU expr
   57     | expr . NE expr
   58     | expr . AND expr
   59     | expr . OR expr
   60     | expr . '<' expr
   61     | expr . LE expr
   62     | expr . '>' expr
   63     | expr . GE expr
   65     | expr . '+' expr
   66     | expr . '-' expr
   67     | expr . '*' expr
   68     | expr . '/' expr
   69     | expr . '%' expr
   70     | '~' expr .
   71     | expr . POW expr

    $default  reduce using rule 70 (expr)

    Conflict between rule 70 and token '<' resolved as reduce ('<' < '~').
    Conflict between rule 70 and token '>' resolved as reduce ('>' < '~').
    Conflict between rule 70 and token EQU resolved as reduce (EQU < '~').
    Conflict between rule 70 and token NE resolved as reduce (NE < '~').
    Conflict between rule 70 and token AND resolved as reduce (AND < '~').
    Conflict between rule 70 and token OR resolved as reduce (OR < '~').
    Conflict between rule 70 and token LE resolved as reduce (LE < '~').
    Conflict between rule 70 and token GE resolved as reduce (GE < '~').
    Conflict between rule 70 and token '+' resolved as reduce ('+' < '~').
    Conflict between rule 70 and token '-' resolved as reduce ('-' < '~').
    Conflict between rule 70 and token '*' resolved as reduce ('*' < '~').
    Conflict between rule 70 and token '/' resolved as reduce ('/' < '~').
    Conflict between rule 70 and token '%' resolved as reduce ('%' < '~').
    Conflict between rule 70 and token POW resolved as reduce (POW < '~').


State 64

   56 expr: expr . EQU expr
   57     | expr . NE expr
   58     | expr . AND expr
   59     | expr . OR expr
   60     | expr . '<' expr
   61     | expr . LE expr
   62     | expr . '>' expr
   63     | expr . GE expr
   65     | expr . '+' expr
   66     | expr . '-' expr
   67     | expr . '*' expr
   68     | expr . '/' expr
   69     | expr . '%' expr
   71     | expr . POW expr
   72     | '(' expr . ')'

    '<'  shift, and go to state 65
    '>'  shift, and go to state 66
    EQU  shift, and go to state 67
    NE   shift, and go to state 68
    AND  shift, and go to state 69
    OR   shift, and go to state 70
    LE   shift, and go to state 71
    GE   shift, and go to state 72
    '+'  shift, and go to state 73
    '-'  shift, and go to state 74
    '*'  shift, and go to state 75
    '/'  shift, and go to state 76
    '%'  shift, and go to state 77
    POW  shift, and go to state 78
    ')'  shift, and go to state 87


State 65

   60 expr: expr '<' . expr

    ID      shift, and go to state 30
    STRING  shift, and go to state 31
    FLOAT   shift, and go to state 32
    LONG    shift, and go to state 33
    TRUE    shift, and go to state 34
    FALSE   shift, and go to state 35
    '!'     shift, and go to state 36
    '~'     shift, and go to state 37
    '('     shift, and go to state 38

    fnctn  go to state 39
    expr   go to state 88


State 66

   62 expr: expr '>' . expr

    ID      shift, and go to state 30
    STRING  shift, and go to state 31
    FLOAT   shift, and go to state 32
    LONG    shift, and go to state 33
    TRUE    shift, and go to state 34
    FALSE   shift, and go to state 35
    '!'     shift, and go to state 36
    '~'     shift, and go to state 37
    '('     shift, and go to state 38

    fnctn  go to state 39
    expr   go to state 89


State 67

   56 expr: expr EQU . expr

    ID      shift, and go to state 30
    STRING  shift, and go to state 31
    FLOAT   shift, and go to state 32
    LONG    shift, and go to state 33
    TRUE    shift, and go to state 34
    FALSE   shift, and go to state 35
    '!'     shift, and go to state 36
    '~'     shift, and go to state 37
    '('     shift, and go to state 38

    fnctn  go to state 39
    expr   go to state 90


State 68

   57 expr: expr NE . expr

    ID      shift, and go to state 30
    STRING  shift, and go to state 31
    FLOAT   shift, and go to state 32
    LONG    shift, and go to state 33
    TRUE    shift, and go to state 34
    FALSE   shift, and go to state 35
    '!'     shift, and go to state 36
    '~'     shift, and go to state 37
    '('     shift, and go to state 38

    fnctn  go to state 39
    expr   go to state 91


State 69

   58 expr: expr AND . expr

    ID      shift, and go to state 30
    STRING  shift, and go to state 31
    FLOAT   shift, and go to state 32
    LONG    shift, and go to state 33
    TRUE    shift, and go to state 34
    FALSE   shift, and go to state 35
    '!'     shift, and go to state 36
    '~'     shift, and go to state 37
    '('     shift, and go to state 38

    fnctn  go to state 39
    expr   go to state 92


State 70

   59 expr: expr OR . expr

    ID      shift, and go to state 30
    STRING  shift, and go to state 31
    FLOAT   shift, and go to state 32
    LONG    shift, and go to state 33
    TRUE    shift, and go to state 34
    FALSE   shift, and go to state 35
    '!'     shift, and go to state 36
    '~'     shift, and go to state 37
    '('     shift, and go to state 38

    fnctn  go to state 39
    expr   go to state 93


State 71

   61 expr: expr LE . expr

    ID      shift, and go to state 30
    STRING  shift, and go to state 31
    FLOAT   shift, and go to state 32
    LONG    shift, and go to state 33
    TRUE    shift, and go to state 34
    FALSE   shift, and go to state 35
    '!'     shift, and go to state 36
    '~'     shift, and go to state 37
    '('     shift, and go to state 38

    fnctn  go to state 39
    expr   go to state 94


State 72

   63 expr: expr GE . expr

    ID      shift, and go to state 30
    STRING  shift, and go to state 31
    FLOAT   shift, and go to state 32
    LONG    shift, and go to state 33
    TRUE    shift, and go to state 34
    FALSE   shift, and go to state 35
    '!'     shift, and go to state 36
    '~'     shift, and go to state 37
    '('     shift, and go to state 38

    fnctn  go to state 39
    expr   go to state 95


State 73

   65 expr: expr '+' . expr

    ID      shift, and go to state 30
    STRING  shift, and go to state 31
    FLOAT   shift, and go to state 32
    LONG    shift, and go to state 33
    TRUE    shift, and go to state 34
    FALSE   shift, and go to state 35
    '!'     shift, and go to state 36
    '~'     shift, and go to state 37
    '('     shift, and go to state 38

    fnctn  go to state 39
    expr   go to state 96


State 74

   66 expr: expr '-' . expr

    ID      shift, and go to state 30
    STRING  shift, and go to state 31
    FLOAT   shift, and go to state 32
    LONG    shift, and go to state 33
    TRUE    shift, and go to state 34
    FALSE   shift, and go to state 35
    '!'     shift, and go to state 36
    '~'     shift, and go to state 37
    '('     shift, and go to state 38

    fnctn  go to state 39
    expr   go to state 97


State 75

   67 expr: expr '*' . expr

    ID      shift, and go to state 30
    STRING  shift, and go to state 31
    FLOAT   shift, and go to state 32
    LONG    shift, and go to state 33
    TRUE    shift, and go to state 34
    FALSE   shift, and go to state 35
    '!'     shift, and go to state 36
    '~'     shift, and go to state 37
    '('     shift, and go to state 38

    fnctn  go to state 39
    expr   go to state 98


State 76

   68 expr: expr '/' . expr

    ID      shift, and go to state 30
    STRING  shift, and go to state 31
    FLOAT   shift, and go to state 32
    LONG    shift, and go to state 33
    TRUE    shift, and go to state 34
    FALSE   shift, and go to state 35
    '!'     shift, and go to state 36
    '~'     shift, and go to state 37
    '('     shift, and go to state 38

    fnctn  go to state 39
    expr   go to state 99


State 77

   69 expr: expr '%' . expr

    ID      shift, and go to state 30
    STRING  shift, and go to state 31
    FLOAT   shift, and go to state 32
    LONG    shift, and go to state 33
    TRUE    shift, and go to state 34
    FALSE   shift, and go to state 35
    '!'     shift, and go to state 36
    '~'     shift, and go to state 37
    '('     shift, and go to state 38

    fnctn  go to state 39
    expr   go to state 100


State 78

   71 expr: expr POW . expr

    ID      shift, and go to state 30
    STRING  shift, and go to state 31
    FLOAT   shift, and go to state 32
    LONG    shift, and go to state 33
    TRUE    shift, and go to state 34
    FALSE   shift, and go to state 35
    '!'     shift, and go to state 36
    '~'     shift, and go to state 37
    '('     shift, and go to state 38

    fnctn  go to state 39
    expr   go to state 101


State 79

   35 stmt: RET expr ';' .

    $default  reduce using rule 35 (stmt)


State 80

   44 declaration: TYPE ID '=' expr .
   56 expr: expr . EQU expr
   57     | expr . NE expr
   58     | expr . AND expr
   59     | expr . OR expr
   60     | expr . '<' expr
   61     | expr . LE expr
   62     | expr . '>' expr
   63     | expr . GE expr
   65     | expr . '+' expr
   66     | expr . '-' expr
   67     | expr . '*' expr
   68     | expr . '/' expr
   69     | expr . '%' expr
   71     | expr . POW expr

    '<'  shift, and go to state 65
    '>'  shift, and go to state 66
    EQU  shift, and go to state 67
    NE   shift, and go to state 68
    AND  shift, and go to state 69
    OR   shift, and go to state 70
    LE   shift, and go to state 71
    GE   shift, and go to state 72
    '+'  shift, and go to state 73
    '-'  shift, and go to state 74
    '*'  shift, and go to state 75
    '/'  shift, and go to state 76
    '%'  shift, and go to state 77
    POW  shift, and go to state 78

    $default  reduce using rule 44 (declaration)


State 81

   23 fnctn_decl: TYPE ID '(' ')' . $@6 stmt_list

    $default  reduce using rule 22 ($@6)

    $@6  go to state 102


State 82

   16 id_list: '(' . TYPE ID $@3 id_list_prime

    TYPE  shift, and go to state 103


State 83

   21 fnctn_decl: TYPE ID $@5 id_list . stmt_list

    '{'  shift, and go to state 104

    stmt_list  go to state 105


State 84

   39 conditional: IF '(' expr ')' . $@8 stmt_list

    $default  reduce using rule 38 ($@8)

    $@8  go to state 106


State 85

   42 conditional: WHILE $@9 '(' expr . ')' $@10 stmt_list
   56 expr: expr . EQU expr
   57     | expr . NE expr
   58     | expr . AND expr
   59     | expr . OR expr
   60     | expr . '<' expr
   61     | expr . LE expr
   62     | expr . '>' expr
   63     | expr . GE expr
   65     | expr . '+' expr
   66     | expr . '-' expr
   67     | expr . '*' expr
   68     | expr . '/' expr
   69     | expr . '%' expr
   71     | expr . POW expr

    '<'  shift, and go to state 65
    '>'  shift, and go to state 66
    EQU  shift, and go to state 67
    NE   shift, and go to state 68
    AND  shift, and go to state 69
    OR   shift, and go to state 70
    LE   shift, and go to state 71
    GE   shift, and go to state 72
    '+'  shift, and go to state 73
    '-'  shift, and go to state 74
    '*'  shift, and go to state 75
    '/'  shift, and go to state 76
    '%'  shift, and go to state 77
    POW  shift, and go to state 78
    ')'  shift, and go to state 107


State 86

    9 expr_list: '(' expr . ')'
   11          | '(' expr . ',' $@1 expr_list_prime
   56 expr: expr . EQU expr
   57     | expr . NE expr
   58     | expr . AND expr
   59     | expr . OR expr
   60     | expr . '<' expr
   61     | expr . LE expr
   62     | expr . '>' expr
   63     | expr . GE expr
   65     | expr . '+' expr
   66     | expr . '-' expr
   67     | expr . '*' expr
   68     | expr . '/' expr
   69     | expr . '%' expr
   71     | expr . POW expr

    '<'  shift, and go to state 65
    '>'  shift, and go to state 66
    EQU  shift, and go to state 67
    NE   shift, and go to state 68
    AND  shift, and go to state 69
    OR   shift, and go to state 70
    LE   shift, and go to state 71
    GE   shift, and go to state 72
    '+'  shift, and go to state 73
    '-'  shift, and go to state 74
    '*'  shift, and go to state 75
    '/'  shift, and go to state 76
    '%'  shift, and go to state 77
    POW  shift, and go to state 78
    ')'  shift, and go to state 108
    ','  shift, and go to state 109


State 87

   72 expr: '(' expr ')' .

    $default  reduce using rule 72 (expr)


State 88

   56 expr: expr . EQU expr
   57     | expr . NE expr
   58     | expr . AND expr
   59     | expr . OR expr
   60     | expr . '<' expr
   60     | expr '<' expr .
   61     | expr . LE expr
   62     | expr . '>' expr
   63     | expr . GE expr
   65     | expr . '+' expr
   66     | expr . '-' expr
   67     | expr . '*' expr
   68     | expr . '/' expr
   69     | expr . '%' expr
   71     | expr . POW expr

    EQU  shift, and go to state 67
    NE   shift, and go to state 68
    AND  shift, and go to state 69
    OR   shift, and go to state 70
    LE   shift, and go to state 71
    GE   shift, and go to state 72
    '+'  shift, and go to state 73
    '-'  shift, and go to state 74
    '*'  shift, and go to state 75
    '/'  shift, and go to state 76
    '%'  shift, and go to state 77
    POW  shift, and go to state 78

    $default  reduce using rule 60 (expr)

    Conflict between rule 60 and token '<' resolved as reduce (%left '<').
    Conflict between rule 60 and token '>' resolved as reduce (%left '>').
    Conflict between rule 60 and token EQU resolved as shift ('<' < EQU).
    Conflict between rule 60 and token NE resolved as shift ('<' < NE).
    Conflict between rule 60 and token AND resolved as shift ('<' < AND).
    Conflict between rule 60 and token OR resolved as shift ('<' < OR).
    Conflict between rule 60 and token LE resolved as shift ('<' < LE).
    Conflict between rule 60 and token GE resolved as shift ('<' < GE).
    Conflict between rule 60 and token '+' resolved as shift ('<' < '+').
    Conflict between rule 60 and token '-' resolved as shift ('<' < '-').
    Conflict between rule 60 and token '*' resolved as shift ('<' < '*').
    Conflict between rule 60 and token '/' resolved as shift ('<' < '/').
    Conflict between rule 60 and token '%' resolved as shift ('<' < '%').
    Conflict between rule 60 and token POW resolved as shift ('<' < POW).


State 89

   56 expr: expr . EQU expr
   57     | expr . NE expr
   58     | expr . AND expr
   59     | expr . OR expr
   60     | expr . '<' expr
   61     | expr . LE expr
   62     | expr . '>' expr
   62     | expr '>' expr .
   63     | expr . GE expr
   65     | expr . '+' expr
   66     | expr . '-' expr
   67     | expr . '*' expr
   68     | expr . '/' expr
   69     | expr . '%' expr
   71     | expr . POW expr

    EQU  shift, and go to state 67
    NE   shift, and go to state 68
    AND  shift, and go to state 69
    OR   shift, and go to state 70
    LE   shift, and go to state 71
    GE   shift, and go to state 72
    '+'  shift, and go to state 73
    '-'  shift, and go to state 74
    '*'  shift, and go to state 75
    '/'  shift, and go to state 76
    '%'  shift, and go to state 77
    POW  shift, and go to state 78

    $default  reduce using rule 62 (expr)

    Conflict between rule 62 and token '<' resolved as reduce (%left '<').
    Conflict between rule 62 and token '>' resolved as reduce (%left '>').
    Conflict between rule 62 and token EQU resolved as shift ('>' < EQU).
    Conflict between rule 62 and token NE resolved as shift ('>' < NE).
    Conflict between rule 62 and token AND resolved as shift ('>' < AND).
    Conflict between rule 62 and token OR resolved as shift ('>' < OR).
    Conflict between rule 62 and token LE resolved as shift ('>' < LE).
    Conflict between rule 62 and token GE resolved as shift ('>' < GE).
    Conflict between rule 62 and token '+' resolved as shift ('>' < '+').
    Conflict between rule 62 and token '-' resolved as shift ('>' < '-').
    Conflict between rule 62 and token '*' resolved as shift ('>' < '*').
    Conflict between rule 62 and token '/' resolved as shift ('>' < '/').
    Conflict between rule 62 and token '%' resolved as shift ('>' < '%').
    Conflict between rule 62 and token POW resolved as shift ('>' < POW).


State 90

   56 expr: expr . EQU expr
   56     | expr EQU expr .
   57     | expr . NE expr
   58     | expr . AND expr
   59     | expr . OR expr
   60     | expr . '<' expr
   61     | expr . LE expr
   62     | expr . '>' expr
   63     | expr . GE expr
   65     | expr . '+' expr
   66     | expr . '-' expr
   67     | expr . '*' expr
   68     | expr . '/' expr
   69     | expr . '%' expr
   71     | expr . POW expr

    EQU  shift, and go to state 67
    NE   shift, and go to state 68
    AND  shift, and go to state 69
    OR   shift, and go to state 70
    LE   shift, and go to state 71
    GE   shift, and go to state 72
    '+'  shift, and go to state 73
    '-'  shift, and go to state 74
    '*'  shift, and go to state 75
    '/'  shift, and go to state 76
    '%'  shift, and go to state 77
    POW  shift, and go to state 78

    $default  reduce using rule 56 (expr)

    Conflict between rule 56 and token '<' resolved as reduce ('<' < EQU).
    Conflict between rule 56 and token '>' resolved as reduce ('>' < EQU).
    Conflict between rule 56 and token EQU resolved as shift (%right EQU).
    Conflict between rule 56 and token NE resolved as shift (%right NE).
    Conflict between rule 56 and token AND resolved as shift (EQU < AND).
    Conflict between rule 56 and token OR resolved as shift (EQU < OR).
    Conflict between rule 56 and token LE resolved as shift (EQU < LE).
    Conflict between rule 56 and token GE resolved as shift (EQU < GE).
    Conflict between rule 56 and token '+' resolved as shift (EQU < '+').
    Conflict between rule 56 and token '-' resolved as shift (EQU < '-').
    Conflict between rule 56 and token '*' resolved as shift (EQU < '*').
    Conflict between rule 56 and token '/' resolved as shift (EQU < '/').
    Conflict between rule 56 and token '%' resolved as shift (EQU < '%').
    Conflict between rule 56 and token POW resolved as shift (EQU < POW).


State 91

   56 expr: expr . EQU expr
   57     | expr . NE expr
   57     | expr NE expr .
   58     | expr . AND expr
   59     | expr . OR expr
   60     | expr . '<' expr
   61     | expr . LE expr
   62     | expr . '>' expr
   63     | expr . GE expr
   65     | expr . '+' expr
   66     | expr . '-' expr
   67     | expr . '*' expr
   68     | expr . '/' expr
   69     | expr . '%' expr
   71     | expr . POW expr

    EQU  shift, and go to state 67
    NE   shift, and go to state 68
    AND  shift, and go to state 69
    OR   shift, and go to state 70
    LE   shift, and go to state 71
    GE   shift, and go to state 72
    '+'  shift, and go to state 73
    '-'  shift, and go to state 74
    '*'  shift, and go to state 75
    '/'  shift, and go to state 76
    '%'  shift, and go to state 77
    POW  shift, and go to state 78

    $default  reduce using rule 57 (expr)

    Conflict between rule 57 and token '<' resolved as reduce ('<' < NE).
    Conflict between rule 57 and token '>' resolved as reduce ('>' < NE).
    Conflict between rule 57 and token EQU resolved as shift (%right EQU).
    Conflict between rule 57 and token NE resolved as shift (%right NE).
    Conflict between rule 57 and token AND resolved as shift (NE < AND).
    Conflict between rule 57 and token OR resolved as shift (NE < OR).
    Conflict between rule 57 and token LE resolved as shift (NE < LE).
    Conflict between rule 57 and token GE resolved as shift (NE < GE).
    Conflict between rule 57 and token '+' resolved as shift (NE < '+').
    Conflict between rule 57 and token '-' resolved as shift (NE < '-').
    Conflict between rule 57 and token '*' resolved as shift (NE < '*').
    Conflict between rule 57 and token '/' resolved as shift (NE < '/').
    Conflict between rule 57 and token '%' resolved as shift (NE < '%').
    Conflict between rule 57 and token POW resolved as shift (NE < POW).


State 92

   56 expr: expr . EQU expr
   57     | expr . NE expr
   58     | expr . AND expr
   58     | expr AND expr .
   59     | expr . OR expr
   60     | expr . '<' expr
   61     | expr . LE expr
   62     | expr . '>' expr
   63     | expr . GE expr
   65     | expr . '+' expr
   66     | expr . '-' expr
   67     | expr . '*' expr
   68     | expr . '/' expr
   69     | expr . '%' expr
   71     | expr . POW expr

    AND  shift, and go to state 69
    OR   shift, and go to state 70
    LE   shift, and go to state 71
    GE   shift, and go to state 72
    '+'  shift, and go to state 73
    '-'  shift, and go to state 74
    '*'  shift, and go to state 75
    '/'  shift, and go to state 76
    '%'  shift, and go to state 77
    POW  shift, and go to state 78

    $default  reduce using rule 58 (expr)

    Conflict between rule 58 and token '<' resolved as reduce ('<' < AND).
    Conflict between rule 58 and token '>' resolved as reduce ('>' < AND).
    Conflict between rule 58 and token EQU resolved as reduce (EQU < AND).
    Conflict between rule 58 and token NE resolved as reduce (NE < AND).
    Conflict between rule 58 and token AND resolved as shift (%right AND).
    Conflict between rule 58 and token OR resolved as shift (%right OR).
    Conflict between rule 58 and token LE resolved as shift (AND < LE).
    Conflict between rule 58 and token GE resolved as shift (AND < GE).
    Conflict between rule 58 and token '+' resolved as shift (AND < '+').
    Conflict between rule 58 and token '-' resolved as shift (AND < '-').
    Conflict between rule 58 and token '*' resolved as shift (AND < '*').
    Conflict between rule 58 and token '/' resolved as shift (AND < '/').
    Conflict between rule 58 and token '%' resolved as shift (AND < '%').
    Conflict between rule 58 and token POW resolved as shift (AND < POW).


State 93

   56 expr: expr . EQU expr
   57     | expr . NE expr
   58     | expr . AND expr
   59     | expr . OR expr
   59     | expr OR expr .
   60     | expr . '<' expr
   61     | expr . LE expr
   62     | expr . '>' expr
   63     | expr . GE expr
   65     | expr . '+' expr
   66     | expr . '-' expr
   67     | expr . '*' expr
   68     | expr . '/' expr
   69     | expr . '%' expr
   71     | expr . POW expr

    AND  shift, and go to state 69
    OR   shift, and go to state 70
    LE   shift, and go to state 71
    GE   shift, and go to state 72
    '+'  shift, and go to state 73
    '-'  shift, and go to state 74
    '*'  shift, and go to state 75
    '/'  shift, and go to state 76
    '%'  shift, and go to state 77
    POW  shift, and go to state 78

    $default  reduce using rule 59 (expr)

    Conflict between rule 59 and token '<' resolved as reduce ('<' < OR).
    Conflict between rule 59 and token '>' resolved as reduce ('>' < OR).
    Conflict between rule 59 and token EQU resolved as reduce (EQU < OR).
    Conflict between rule 59 and token NE resolved as reduce (NE < OR).
    Conflict between rule 59 and token AND resolved as shift (%right AND).
    Conflict between rule 59 and token OR resolved as shift (%right OR).
    Conflict between rule 59 and token LE resolved as shift (OR < LE).
    Conflict between rule 59 and token GE resolved as shift (OR < GE).
    Conflict between rule 59 and token '+' resolved as shift (OR < '+').
    Conflict between rule 59 and token '-' resolved as shift (OR < '-').
    Conflict between rule 59 and token '*' resolved as shift (OR < '*').
    Conflict between rule 59 and token '/' resolved as shift (OR < '/').
    Conflict between rule 59 and token '%' resolved as shift (OR < '%').
    Conflict between rule 59 and token POW resolved as shift (OR < POW).


State 94

   56 expr: expr . EQU expr
   57     | expr . NE expr
   58     | expr . AND expr
   59     | expr . OR expr
   60     | expr . '<' expr
   61     | expr . LE expr
   61     | expr LE expr .
   62     | expr . '>' expr
   63     | expr . GE expr
   65     | expr . '+' expr
   66     | expr . '-' expr
   67     | expr . '*' expr
   68     | expr . '/' expr
   69     | expr . '%' expr
   71     | expr . POW expr

    LE   shift, and go to state 71
    GE   shift, and go to state 72
    '+'  shift, and go to state 73
    '-'  shift, and go to state 74
    '*'  shift, and go to state 75
    '/'  shift, and go to state 76
    '%'  shift, and go to state 77
    POW  shift, and go to state 78

    $default  reduce using rule 61 (expr)

    Conflict between rule 61 and token '<' resolved as reduce ('<' < LE).
    Conflict between rule 61 and token '>' resolved as reduce ('>' < LE).
    Conflict between rule 61 and token EQU resolved as reduce (EQU < LE).
    Conflict between rule 61 and token NE resolved as reduce (NE < LE).
    Conflict between rule 61 and token AND resolved as reduce (AND < LE).
    Conflict between rule 61 and token OR resolved as reduce (OR < LE).
    Conflict between rule 61 and token LE resolved as shift (%right LE).
    Conflict between rule 61 and token GE resolved as shift (%right GE).
    Conflict between rule 61 and token '+' resolved as shift (LE < '+').
    Conflict between rule 61 and token '-' resolved as shift (LE < '-').
    Conflict between rule 61 and token '*' resolved as shift (LE < '*').
    Conflict between rule 61 and token '/' resolved as shift (LE < '/').
    Conflict between rule 61 and token '%' resolved as shift (LE < '%').
    Conflict between rule 61 and token POW resolved as shift (LE < POW).


State 95

   56 expr: expr . EQU expr
   57     | expr . NE expr
   58     | expr . AND expr
   59     | expr . OR expr
   60     | expr . '<' expr
   61     | expr . LE expr
   62     | expr . '>' expr
   63     | expr . GE expr
   63     | expr GE expr .
   65     | expr . '+' expr
   66     | expr . '-' expr
   67     | expr . '*' expr
   68     | expr . '/' expr
   69     | expr . '%' expr
   71     | expr . POW expr

    LE   shift, and go to state 71
    GE   shift, and go to state 72
    '+'  shift, and go to state 73
    '-'  shift, and go to state 74
    '*'  shift, and go to state 75
    '/'  shift, and go to state 76
    '%'  shift, and go to state 77
    POW  shift, and go to state 78

    $default  reduce using rule 63 (expr)

    Conflict between rule 63 and token '<' resolved as reduce ('<' < GE).
    Conflict between rule 63 and token '>' resolved as reduce ('>' < GE).
    Conflict between rule 63 and token EQU resolved as reduce (EQU < GE).
    Conflict between rule 63 and token NE resolved as reduce (NE < GE).
    Conflict between rule 63 and token AND resolved as reduce (AND < GE).
    Conflict between rule 63 and token OR resolved as reduce (OR < GE).
    Conflict between rule 63 and token LE resolved as shift (%right LE).
    Conflict between rule 63 and token GE resolved as shift (%right GE).
    Conflict between rule 63 and token '+' resolved as shift (GE < '+').
    Conflict between rule 63 and token '-' resolved as shift (GE < '-').
    Conflict between rule 63 and token '*' resolved as shift (GE < '*').
    Conflict between rule 63 and token '/' resolved as shift (GE < '/').
    Conflict between rule 63 and token '%' resolved as shift (GE < '%').
    Conflict between rule 63 and token POW resolved as shift (GE < POW).


State 96

   56 expr: expr . EQU expr
   57     | expr . NE expr
   58     | expr . AND expr
   59     | expr . OR expr
   60     | expr . '<' expr
   61     | expr . LE expr
   62     | expr . '>' expr
   63     | expr . GE expr
   65     | expr . '+' expr
   65     | expr '+' expr .
   66     | expr . '-' expr
   67     | expr . '*' expr
   68     | expr . '/' expr
   69     | expr . '%' expr
   71     | expr . POW expr

    '*'  shift, and go to state 75
    '/'  shift, and go to state 76
    '%'  shift, and go to state 77
    POW  shift, and go to state 78

    $default  reduce using rule 65 (expr)

    Conflict between rule 65 and token '<' resolved as reduce ('<' < '+').
    Conflict between rule 65 and token '>' resolved as reduce ('>' < '+').
    Conflict between rule 65 and token EQU resolved as reduce (EQU < '+').
    Conflict between rule 65 and token NE resolved as reduce (NE < '+').
    Conflict between rule 65 and token AND resolved as reduce (AND < '+').
    Conflict between rule 65 and token OR resolved as reduce (OR < '+').
    Conflict between rule 65 and token LE resolved as reduce (LE < '+').
    Conflict between rule 65 and token GE resolved as reduce (GE < '+').
    Conflict between rule 65 and token '+' resolved as reduce (%left '+').
    Conflict between rule 65 and token '-' resolved as reduce (%left '-').
    Conflict between rule 65 and token '*' resolved as shift ('+' < '*').
    Conflict between rule 65 and token '/' resolved as shift ('+' < '/').
    Conflict between rule 65 and token '%' resolved as shift ('+' < '%').
    Conflict between rule 65 and token POW resolved as shift ('+' < POW).


State 97

   56 expr: expr . EQU expr
   57     | expr . NE expr
   58     | expr . AND expr
   59     | expr . OR expr
   60     | expr . '<' expr
   61     | expr . LE expr
   62     | expr . '>' expr
   63     | expr . GE expr
   65     | expr . '+' expr
   66     | expr . '-' expr
   66     | expr '-' expr .
   67     | expr . '*' expr
   68     | expr . '/' expr
   69     | expr . '%' expr
   71     | expr . POW expr

    '*'  shift, and go to state 75
    '/'  shift, and go to state 76
    '%'  shift, and go to state 77
    POW  shift, and go to state 78

    $default  reduce using rule 66 (expr)

    Conflict between rule 66 and token '<' resolved as reduce ('<' < '-').
    Conflict between rule 66 and token '>' resolved as reduce ('>' < '-').
    Conflict between rule 66 and token EQU resolved as reduce (EQU < '-').
    Conflict between rule 66 and token NE resolved as reduce (NE < '-').
    Conflict between rule 66 and token AND resolved as reduce (AND < '-').
    Conflict between rule 66 and token OR resolved as reduce (OR < '-').
    Conflict between rule 66 and token LE resolved as reduce (LE < '-').
    Conflict between rule 66 and token GE resolved as reduce (GE < '-').
    Conflict between rule 66 and token '+' resolved as reduce (%left '+').
    Conflict between rule 66 and token '-' resolved as reduce (%left '-').
    Conflict between rule 66 and token '*' resolved as shift ('-' < '*').
    Conflict between rule 66 and token '/' resolved as shift ('-' < '/').
    Conflict between rule 66 and token '%' resolved as shift ('-' < '%').
    Conflict between rule 66 and token POW resolved as shift ('-' < POW).


State 98

   56 expr: expr . EQU expr
   57     | expr . NE expr
   58     | expr . AND expr
   59     | expr . OR expr
   60     | expr . '<' expr
   61     | expr . LE expr
   62     | expr . '>' expr
   63     | expr . GE expr
   65     | expr . '+' expr
   66     | expr . '-' expr
   67     | expr . '*' expr
   67     | expr '*' expr .
   68     | expr . '/' expr
   69     | expr . '%' expr
   71     | expr . POW expr

    POW  shift, and go to state 78

    $default  reduce using rule 67 (expr)

    Conflict between rule 67 and token '<' resolved as reduce ('<' < '*').
    Conflict between rule 67 and token '>' resolved as reduce ('>' < '*').
    Conflict between rule 67 and token EQU resolved as reduce (EQU < '*').
    Conflict between rule 67 and token NE resolved as reduce (NE < '*').
    Conflict between rule 67 and token AND resolved as reduce (AND < '*').
    Conflict between rule 67 and token OR resolved as reduce (OR < '*').
    Conflict between rule 67 and token LE resolved as reduce (LE < '*').
    Conflict between rule 67 and token GE resolved as reduce (GE < '*').
    Conflict between rule 67 and token '+' resolved as reduce ('+' < '*').
    Conflict between rule 67 and token '-' resolved as reduce ('-' < '*').
    Conflict between rule 67 and token '*' resolved as reduce (%left '*').
    Conflict between rule 67 and token '/' resolved as reduce (%left '/').
    Conflict between rule 67 and token '%' resolved as reduce (%left '%').
    Conflict between rule 67 and token POW resolved as shift ('*' < POW).


State 99

   56 expr: expr . EQU expr
   57     | expr . NE expr
   58     | expr . AND expr
   59     | expr . OR expr
   60     | expr . '<' expr
   61     | expr . LE expr
   62     | expr . '>' expr
   63     | expr . GE expr
   65     | expr . '+' expr
   66     | expr . '-' expr
   67     | expr . '*' expr
   68     | expr . '/' expr
   68     | expr '/' expr .
   69     | expr . '%' expr
   71     | expr . POW expr

    POW  shift, and go to state 78

    $default  reduce using rule 68 (expr)

    Conflict between rule 68 and token '<' resolved as reduce ('<' < '/').
    Conflict between rule 68 and token '>' resolved as reduce ('>' < '/').
    Conflict between rule 68 and token EQU resolved as reduce (EQU < '/').
    Conflict between rule 68 and token NE resolved as reduce (NE < '/').
    Conflict between rule 68 and token AND resolved as reduce (AND < '/').
    Conflict between rule 68 and token OR resolved as reduce (OR < '/').
    Conflict between rule 68 and token LE resolved as reduce (LE < '/').
    Conflict between rule 68 and token GE resolved as reduce (GE < '/').
    Conflict between rule 68 and token '+' resolved as reduce ('+' < '/').
    Conflict between rule 68 and token '-' resolved as reduce ('-' < '/').
    Conflict between rule 68 and token '*' resolved as reduce (%left '*').
    Conflict between rule 68 and token '/' resolved as reduce (%left '/').
    Conflict between rule 68 and token '%' resolved as reduce (%left '%').
    Conflict between rule 68 and token POW resolved as shift ('/' < POW).


State 100

   56 expr: expr . EQU expr
   57     | expr . NE expr
   58     | expr . AND expr
   59     | expr . OR expr
   60     | expr . '<' expr
   61     | expr . LE expr
   62     | expr . '>' expr
   63     | expr . GE expr
   65     | expr . '+' expr
   66     | expr . '-' expr
   67     | expr . '*' expr
   68     | expr . '/' expr
   69     | expr . '%' expr
   69     | expr '%' expr .
   71     | expr . POW expr

    POW  shift, and go to state 78

    $default  reduce using rule 69 (expr)

    Conflict between rule 69 and token '<' resolved as reduce ('<' < '%').
    Conflict between rule 69 and token '>' resolved as reduce ('>' < '%').
    Conflict between rule 69 and token EQU resolved as reduce (EQU < '%').
    Conflict between rule 69 and token NE resolved as reduce (NE < '%').
    Conflict between rule 69 and token AND resolved as reduce (AND < '%').
    Conflict between rule 69 and token OR resolved as reduce (OR < '%').
    Conflict between rule 69 and token LE resolved as reduce (LE < '%').
    Conflict between rule 69 and token GE resolved as reduce (GE < '%').
    Conflict between rule 69 and token '+' resolved as reduce ('+' < '%').
    Conflict between rule 69 and token '-' resolved as reduce ('-' < '%').
    Conflict between rule 69 and token '*' resolved as reduce (%left '*').
    Conflict between rule 69 and token '/' resolved as reduce (%left '/').
    Conflict between rule 69 and token '%' resolved as reduce (%left '%').
    Conflict between rule 69 and token POW resolved as shift ('%' < POW).


State 101

   56 expr: expr . EQU expr
   57     | expr . NE expr
   58     | expr . AND expr
   59     | expr . OR expr
   60     | expr . '<' expr
   61     | expr . LE expr
   62     | expr . '>' expr
   63     | expr . GE expr
   65     | expr . '+' expr
   66     | expr . '-' expr
   67     | expr . '*' expr
   68     | expr . '/' expr
   69     | expr . '%' expr
   71     | expr . POW expr
   71     | expr POW expr .

    POW  shift, and go to state 78

    $default  reduce using rule 71 (expr)

    Conflict between rule 71 and token '<' resolved as reduce ('<' < POW).
    Conflict between rule 71 and token '>' resolved as reduce ('>' < POW).
    Conflict between rule 71 and token EQU resolved as reduce (EQU < POW).
    Conflict between rule 71 and token NE resolved as reduce (NE < POW).
    Conflict between rule 71 and token AND resolved as reduce (AND < POW).
    Conflict between rule 71 and token OR resolved as reduce (OR < POW).
    Conflict between rule 71 and token LE resolved as reduce (LE < POW).
    Conflict between rule 71 and token GE resolved as reduce (GE < POW).
    Conflict between rule 71 and token '+' resolved as reduce ('+' < POW).
    Conflict between rule 71 and token '-' resolved as reduce ('-' < POW).
    Conflict between rule 71 and token '*' resolved as reduce ('*' < POW).
    Conflict between rule 71 and token '/' resolved as reduce ('/' < POW).
    Conflict between rule 71 and token '%' resolved as reduce ('%' < POW).
    Conflict between rule 71 and token POW resolved as shift (%right POW).


State 102

   23 fnctn_decl: TYPE ID '(' ')' $@6 . stmt_list

    '{'  shift, and go to state 104

    stmt_list  go to state 110


State 103

   16 id_list: '(' TYPE . ID $@3 id_list_prime

    ID  shift, and go to state 111


State 104

    8 stmt_list: '{' . stmt stmt_list_prime

    TYPE      shift, and go to state 1
    IF        shift, and go to state 2
    WHILE     shift, and go to state 3
    BREAK     shift, and go to state 5
    CONTINUE  shift, and go to state 6
    ID        shift, and go to state 7
    PRINT     shift, and go to state 8
    PRINTLN   shift, and go to state 9
    INPUT     shift, and go to state 10
    RET       shift, and go to state 11

    fnctn_decl   go to state 14
    fnctn        go to state 15
    stmt         go to state 112
    conditional  go to state 17
    declaration  go to state 18
    assignment   go to state 19
    print        go to state 20
    input        go to state 21


State 105

   21 fnctn_decl: TYPE ID $@5 id_list stmt_list .

    $default  reduce using rule 21 (fnctn_decl)


State 106

   39 conditional: IF '(' expr ')' $@8 . stmt_list

    '{'  shift, and go to state 104

    stmt_list  go to state 113


State 107

   42 conditional: WHILE $@9 '(' expr ')' . $@10 stmt_list

    $default  reduce using rule 41 ($@10)

    $@10  go to state 114


State 108

    9 expr_list: '(' expr ')' .

    $default  reduce using rule 9 (expr_list)


State 109

   11 expr_list: '(' expr ',' . $@1 expr_list_prime

    $default  reduce using rule 10 ($@1)

    $@1  go to state 115


State 110

   23 fnctn_decl: TYPE ID '(' ')' $@6 stmt_list .

    $default  reduce using rule 23 (fnctn_decl)


State 111

   16 id_list: '(' TYPE ID . $@3 id_list_prime

    $default  reduce using rule 15 ($@3)

    $@3  go to state 116


State 112

    8 stmt_list: '{' stmt . stmt_list_prime

    TYPE      shift, and go to state 1
    IF        shift, and go to state 2
    WHILE     shift, and go to state 3
    LINE      shift, and go to state 117
    BREAK     shift, and go to state 5
    CONTINUE  shift, and go to state 6
    ID        shift, and go to state 7
    PRINT     shift, and go to state 8
    PRINTLN   shift, and go to state 9
    INPUT     shift, and go to state 10
    RET       shift, and go to state 11
    '}'       shift, and go to state 118

    stmt_list_prime  go to state 119
    fnctn_decl       go to state 14
    fnctn            go to state 15
    stmt             go to state 120
    conditional      go to state 17
    declaration      go to state 18
    assignment       go to state 19
    print            go to state 20
    input            go to state 21


State 113

   39 conditional: IF '(' expr ')' $@8 stmt_list .

    $default  reduce using rule 39 (conditional)


State 114

   42 conditional: WHILE $@9 '(' expr ')' $@10 . stmt_list

    '{'  shift, and go to state 104

    stmt_list  go to state 121


State 115

   11 expr_list: '(' expr ',' $@1 . expr_list_prime

    ID      shift, and go to state 30
    STRING  shift, and go to state 31
    FLOAT   shift, and go to state 32
    LONG    shift, and go to state 33
    TRUE    shift, and go to state 34
    FALSE   shift, and go to state 35
    '!'     shift, and go to state 36
    '~'     shift, and go to state 37
    '('     shift, and go to state 38

    expr_list_prime  go to state 122
    fnctn            go to state 39
    expr             go to state 123


State 116

   16 id_list: '(' TYPE ID $@3 . id_list_prime

    ')'  shift, and go to state 124
    ','  shift, and go to state 125

    id_list_prime  go to state 126


State 117

    6 stmt_list_prime: LINE . stmt_list_prime

    TYPE      shift, and go to state 1
    IF        shift, and go to state 2
    WHILE     shift, and go to state 3
    LINE      shift, and go to state 117
    BREAK     shift, and go to state 5
    CONTINUE  shift, and go to state 6
    ID        shift, and go to state 7
    PRINT     shift, and go to state 8
    PRINTLN   shift, and go to state 9
    INPUT     shift, and go to state 10
    RET       shift, and go to state 11
    '}'       shift, and go to state 118

    stmt_list_prime  go to state 127
    fnctn_decl       go to state 14
    fnctn            go to state 15
    stmt             go to state 120
    conditional      go to state 17
    declaration      go to state 18
    assignment       go to state 19
    print            go to state 20
    input            go to state 21


State 118

    7 stmt_list_prime: '}' .

    $default  reduce using rule 7 (stmt_list_prime)


State 119

    8 stmt_list: '{' stmt stmt_list_prime .

    $default  reduce using rule 8 (stmt_list)


State 120

    5 stmt_list_prime: stmt . stmt_list_prime

    TYPE      shift, and go to state 1
    IF        shift, and go to state 2
    WHILE     shift, and go to state 3
    LINE      shift, and go to state 117
    BREAK     shift, and go to state 5
    CONTINUE  shift, and go to state 6
    ID        shift, and go to state 7
    PRINT     shift, and go to state 8
    PRINTLN   shift, and go to state 9
    INPUT     shift, and go to state 10
    RET       shift, and go to state 11
    '}'       shift, and go to state 118

    stmt_list_prime  go to state 128
    fnctn_decl       go to state 14
    fnctn            go to state 15
    stmt             go to state 120
    conditional      go to state 17
    declaration      go to state 18
    assignment       go to state 19
    print            go to state 20
    input            go to state 21


State 121

   42 conditional: WHILE $@9 '(' expr ')' $@10 stmt_list .

    $default  reduce using rule 42 (conditional)


State 122

   11 expr_list: '(' expr ',' $@1 expr_list_prime .

    $default  reduce using rule 11 (expr_list)


State 123

   13 expr_list_prime: expr . ',' $@2 expr_list_prime
   14                | expr . ')'
   56 expr: expr . EQU expr
   57     | expr . NE expr
   58     | expr . AND expr
   59     | expr . OR expr
   60     | expr . '<' expr
   61     | expr . LE expr
   62     | expr . '>' expr
   63     | expr . GE expr
   65     | expr . '+' expr
   66     | expr . '-' expr
   67     | expr . '*' expr
   68     | expr . '/' expr
   69     | expr . '%' expr
   71     | expr . POW expr

    '<'  shift, and go to state 65
    '>'  shift, and go to state 66
    EQU  shift, and go to state 67
    NE   shift, and go to state 68
    AND  shift, and go to state 69
    OR   shift, and go to state 70
    LE   shift, and go to state 71
    GE   shift, and go to state 72
    '+'  shift, and go to state 73
    '-'  shift, and go to state 74
    '*'  shift, and go to state 75
    '/'  shift, and go to state 76
    '%'  shift, and go to state 77
    POW  shift, and go to state 78
    ')'  shift, and go to state 129
    ','  shift, and go to state 130


State 124

   19 id_list_prime: ')' .

    $default  reduce using rule 19 (id_list_prime)


State 125

   18 id_list_prime: ',' . TYPE ID $@4 id_list_prime

    TYPE  shift, and go to state 131


State 126

   16 id_list: '(' TYPE ID $@3 id_list_prime .

    $default  reduce using rule 16 (id_list)


State 127

    6 stmt_list_prime: LINE stmt_list_prime .

    $default  reduce using rule 6 (stmt_list_prime)


State 128

    5 stmt_list_prime: stmt stmt_list_prime .

    $default  reduce using rule 5 (stmt_list_prime)


State 129

   14 expr_list_prime: expr ')' .

    $default  reduce using rule 14 (expr_list_prime)


State 130

   13 expr_list_prime: expr ',' . $@2 expr_list_prime

    $default  reduce using rule 12 ($@2)

    $@2  go to state 132


State 131

   18 id_list_prime: ',' TYPE . ID $@4 id_list_prime

    ID  shift, and go to state 133


State 132

   13 expr_list_prime: expr ',' $@2 . expr_list_prime

    ID      shift, and go to state 30
    STRING  shift, and go to state 31
    FLOAT   shift, and go to state 32
    LONG    shift, and go to state 33
    TRUE    shift, and go to state 34
    FALSE   shift, and go to state 35
    '!'     shift, and go to state 36
    '~'     shift, and go to state 37
    '('     shift, and go to state 38

    expr_list_prime  go to state 134
    fnctn            go to state 39
    expr             go to state 123


State 133

   18 id_list_prime: ',' TYPE ID . $@4 id_list_prime

    $default  reduce using rule 17 ($@4)

    $@4  go to state 135


State 134

   13 expr_list_prime: expr ',' $@2 expr_list_prime .

    $default  reduce using rule 13 (expr_list_prime)


State 135

   18 id_list_prime: ',' TYPE ID $@4 . id_list_prime

    ')'  shift, and go to state 124
    ','  shift, and go to state 125

    id_list_prime  go to state 136


State 136

   18 id_list_prime: ',' TYPE ID $@4 id_list_prime .

    $default  reduce using rule 18 (id_list_prime)
